// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String?  @unique
  nameid        String   @unique
  profile       Json?
  password      String
  register_date DateTime @default(now())
  update_date   DateTime @updatedAt
  posts         Post[]
}

model Category {
  id            Int            @id @default(autoincrement())
  name          Json
  slug          String         @unique @db.VarChar(50)
  icon          String?
  icon_mime     String?
  parent        Int            @default(0)
  rank          Int            @default(0)
  register_date DateTime       @default(now())
  update_date   DateTime       @updatedAt
  CategoryPost  CategoryPost[]
}

model Post {
  id            Int            @id @default(autoincrement())
  userId        Int
  title         Json
  description   Json?
  body          Json
  thumbnail     Int?
  permalink     String?        @unique @db.VarChar(100)
  status        String         @db.VarChar(15)
  register_date DateTime       @default(now())
  update_date   DateTime       @updatedAt

  CategoryPost  CategoryPost[]
  user          User           @relation(fields: [userId], references: [id])
  media         Media?         @relation(fields: [thumbnail], references: [id], onDelete: SetNull, onUpdate: SetNull)
  Discussion    Discussion[]
}

model CategoryPost {
  categoryId Int
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  post       Post     @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@id([categoryId, postId])
}

model Discussion {
  id            Int      @id @default(autoincrement()) @db.MediumInt
  post_id       Int
  nicname       String   @db.VarChar(40)
  body          String   @db.MediumText
  sender_info   Json
  parent_id     Int      @default(0) @db.MediumInt
  register_date DateTime @default(now())
  update_date   DateTime @updatedAt

  Post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
}

model Media {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(150)
  url           Json
  mime          String   @db.VarChar(60)
  memo          String?  @db.Text
  register_date DateTime @default(now())
  update_date   DateTime @updatedAt
  post          Post[]
}
