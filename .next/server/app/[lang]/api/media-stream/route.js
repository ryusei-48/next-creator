"use strict";(()=>{var e={};e.id=9127,e.ids=[9127],e.modules={53524:e=>{e.exports=require("@prisma/client")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},57147:e=>{e.exports=require("fs")},92718:(e,a,r)=>{r.r(a),r.d(a,{headerHooks:()=>_,originalPathname:()=>x,requestAsyncStorage:()=>c,routeModule:()=>l,serverHooks:()=>w,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>h});var t={};r.r(t),r.d(t,{GET:()=>MediaStream}),r(52676);var i=r(30813),s=r(19361),n=r(23284),o=r(57147),u=r(53524);let d=process.env.APP_ROOT_PATH,p=`${d}/public`,m=new u.PrismaClient;async function MediaStream(e){let a=new Headers(e.headers),r=new URL(e.url).searchParams,t=r.get("w"),i=r.get("id");if(t&&i){let e=await m.media.findFirst({where:{id:Number(i)}});if(e){let r=e.url;if(a.set("Content-Type",e.mime),r.paths[t]){let e=(0,o.createReadStream)(p+r.paths[t]);return new Response(e,{headers:a})}}}return n.Z.json({message:"メディアの取得に失敗しました。"},{status:401})}let l=new i.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/[lang]/api/media-stream/route",pathname:"/[lang]/api/media-stream",filename:"route",bundlePath:"app/[lang]/api/media-stream/route"},resolvedPagePath:"/var/www/next-creator/app/[lang]/api/media-stream/route.ts",nextConfigOutput:"",userland:t}),{requestAsyncStorage:c,staticGenerationAsyncStorage:g,serverHooks:w,headerHooks:_,staticGenerationBailout:h}=l,x="/[lang]/api/media-stream/route"}};var a=require("../../../../webpack-runtime.js");a.C(e);var __webpack_exec__=e=>a(a.s=e),r=a.X(0,[8807,8813,3284],()=>__webpack_exec__(92718));module.exports=r})();